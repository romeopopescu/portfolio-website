---
import '../styles/global.css';
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" type="image/svg+xml" href="../assets/rupiah.png" />
        <title>Romeo Popescu</title>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Bitcount+Single+Ink:wght@100..900&display=swap" rel="stylesheet">
        <script src="https://cdn.tailwindcss.com"></script>

        <style>
            body {
                font-family: "Bitcount Single Ink", sans-serif;
                background-color: #000000;
                background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='250' height='30' viewBox='0 0 1000 120'%3E%3Cg fill='none' stroke='%230D4B18' stroke-width='10' %3E%3Cpath d='M-500 75c0 0 125-30 250-30S0 75 0 75s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 45c0 0 125-30 250-30S0 45 0 45s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 105c0 0 125-30 250-30S0 105 0 105s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 15c0 0 125-30 250-30S0 15 0 15s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500-15c0 0 125-30 250-30S0-15 0-15s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 135c0 0 125-30 250-30S0 135 0 135s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3C/g%3E%3C/svg%3E");
                overflow-x: hidden;
                min-height: 100vh;
            }

            .leaf-container {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                pointer-events: none;
                z-index: 0;
            }

            .leaf {
                position: absolute;
                width: 60px;
                height: 60px;
                opacity: 0.4;
                transition: transform 0.3s ease-out, opacity 0.3s ease;
                filter: drop-shadow(0 0 8px rgba(3, 114, 57, 0.3));
            }

            .leaf:hover {
                opacity: 0.8;
                filter: drop-shadow(0 0 15px rgba(3, 114, 57, 0.6));
            }

            .content {
                position: relative;
                z-index: 1;
            }
        </style>

    </head>
    <body class="bg-sky-950 font-mono">
        <!-- Floating Leaves Background -->
        <div class="leaf-container" id="leafContainer"></div>

        <div class="content flex flex-col">
            <div class="flex-grow m-2 mt-9 text-gray-300 text-4xl">
                Romeo Popescu
            </div>
            <div class="font-light ml-2 text-gray-300 ">
                Fullstack developer
            </div>
        </div>
        <div class="flex flex-col justify-center items-center align-center">
            <div class="text-gray-300 text-2xl mt-8">
                Projects
            </div>
        </div>

        <script>
            const leafSVGs = [
                `<svg viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M450.72 418.17c-42.29-21.86-144.5-220-171.65-198.22s-40.59 114.28 0.29 171.31 132 97 153.52 129.58 18.45 57.07 13.36 63.2S262.49 462 217.66 485.53s-28.41 84.69 17.56 132.54S427 651.39 455.57 672.76s32.72 55 20.49 55-145.88-32.38-192.77-24.15-68.25 39.89 0.12 73.42 180.26 8.87 199.28 28.21 6.8 28.54-7.47 29.58-110.14-4.91-143.78 0.24 6.21 56.07 23.57 69.3 80.59 19.24 98.94 16.15 36.67-26.58 51-20.48 3.14 45.88 8.25 53 46.92 9.1 53-0.09-10.26-37.71-0.09-51 32.65 11.16 66.28-1.13 109-70.55 111-104.2-132.52 27.76-167.19 26.8c-24.48-4-34.71-21.36-19.43-30.56s228.33-55.45 244.57-96.27 4-34.68-21.47-34.63S605.6 724.45 590.26 700 791 610 813.3 555.9s29.37-119.36-0.22-127.47-147.62 137.92-194.54 130.86-1.06-21.41 19.29-48 132.36-120.51 133.32-154.16 10.08-67.32-27.65-71.33-129.27 135.84-149.69 123.63 52.89-78.61 64-143.89S632.09 133 611.7 137.14s-19.37 4.11-19.34 22.47 10.33 79.52-1.85 114.21-13.14 60.18-23.35 54.08-10.27-43.83-4.2-73.41 23.3-92.83 13.07-112.19S545.27 48.53 467.8 68s-72.25 89.86-65 136.75 27.67 83.57 45.09 128.41 21.71 94.77 2.83 85.01z" fill="#037239"></path></g></svg>`,
                `<svg viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M329.38 67.05c-26.8 9.6-72.36 203-56.59 258 27.91 14 80.76 23 97.78 40.31-32.83-2.62-100.33-1.11-100.33-1.11L281.79 478l112.44 19.84-103.86 19.72 31.86 101.18 107.23 5.72-85.31 30.19L406 756.76l118.66-2.94-85.22 26.58 40.32 58.16 91.58 13.23-48.86 22.91s47.69 61.08 89.49 70.68 78.92 19.75 93.5 12.85 45.83-88.11 47.68-124.78 1.18-64 1.18-64l-24.78 17.71 20.89-73.17-27-73.57L699 696.28l11.39-94.8-56.5-75.27L612 610l21.76-122.79-48-76.57-46.52 80.67L567 366.47l-57.65-81-36.85 75.16 19.53-108-60.57-63.69-24.8 57.59-4.33-93.66s-41.17-45.09-55-80.89c-4.77-15.56-17.95-4.93-17.95-4.93z" fill="#037239"></path></g></svg>`,
                `<svg viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M179.44 406.4c14.06-5.76 17.53-101.63 46.87-137.58s18.84 27.54 42.56 17.82S318 182.15 387.5 139.8c15.61-9.54 24.58 3.15 20.06 18.22s-16.08 29.89-0.32 39.17 41.15-47.08 79.71-66.67 55.6-13.34 61.22-1.17-17.78 21.14-3.22 29 39.32-19.27 67.8-29.68 51.87-19.37 60.41-7.76-13.27 16.77 0.14 29.53 54.49-29.89 89.24-40.35 5.8 20.29 20.73 33.69 43.11-7 64.9-1.41 12.51 21.31 34.73 38.65 66.28 8.09 75.57 20-16.38 19.98-31.15 63.83-1.45 71.74-18.1 98.71-80.51 49.36-79.71 66.67 55-2 46 15.68-31 42.4-53.52 53.52-60 13.27-64.37 25.75 45.67 14.65 41.66 26.37c-6.13 18.86-85.82 36.45-97.77 56.45s49.06 32.15 31.74 43.65-81.51 7-97.7 24.3 54.86 14 41.08 34.16-38.39 27.7-67.87 34.11-60-1.87-66.07 17 65.61 31 48.09 45.14-99.73-11.36-115.09 1.83 43.25 22.57 13.94 37.1-117.23-8-131.34 12.9 81 13.38 46.32 40.83-149.15 17.06-183.47 0.9C137.53 865 78.73 753.66 69.38 697.05s-6.24-59.77 0.76-76.49 36.32 34.85 30.95-12.05S71.91 548.06 82 511.19s22.07 26.21 26.46-18.4 3.14-103.59 28.71-118.12c40.08-22.78 22.83 39.68 42.27 31.73z" fill="#037239"></path><path d="M845.45 220.74c-65.39-5.94-617.74 280.88-682.78 521.6 128.65-187.47 682.78-521.6 682.78-521.6z" fill="#005866"></path></g></svg>`,
                `<svg viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M854.29 957.76c9.37 12.88 1.84-31.2 12.85-62.4s27.53-51.36 27.53-102.78-47.72-141.32-69.74-200.05-16.52-91.77-66.07-170.69-112-163.34-176.19-194.55-77.09-102.78-154.18-135.81S193.57 108 129.33 63.95c130.31 134 148.66 268 211.06 365.23s84.43 62.4 150.5 143.16 33.14 88 97.27 179.86c74.34 106.45 192.72 104.61 266.13 205.56z" fill="#037239"></path></g></svg>`
            ];

            const container = document.getElementById('leafContainer');
            const numLeaves = 15;

            // Create leaves with random positions and rotations
            for (let i = 0; i < numLeaves; i++) {
                const leafDiv = document.createElement('div');
                leafDiv.className = 'leaf';
                leafDiv.innerHTML = leafSVGs[i % leafSVGs.length];
                
                // Random positioning
                leafDiv.style.left = Math.random() * 100 + '%';
                leafDiv.style.top = Math.random() * 100 + '%';
                leafDiv.style.transform = `rotate(${Math.random() * 360}deg) scale(${0.8 + Math.random() * 0.6})`;
                
                container.appendChild(leafDiv);
            }

            // Mouse tracking animation
            document.addEventListener('mousemove', (e) => {
                const leaves = document.querySelectorAll('.leaf');
                const mouseX = e.clientX;
                const mouseY = e.clientY;

                leaves.forEach((leaf, index) => {
                    const rect = leaf.getBoundingClientRect();
                    const leafX = rect.left + rect.width / 2;
                    const leafY = rect.top + rect.height / 2;

                    const deltaX = mouseX - leafX;
                    const deltaY = mouseY - leafY;
                    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);

                    // Calculate repulsion effect
                    const maxDistance = 200;
                    if (distance < maxDistance) {
                        const force = (maxDistance - distance) / maxDistance;
                        const moveX = -deltaX * force * 0.3;
                        const moveY = -deltaY * force * 0.3;
                        const rotation = Math.random() * 360;
                        
                        leaf.style.transform = `translate(${moveX}px, ${moveY}px) rotate(${rotation}deg) scale(${0.8 + Math.random() * 0.6})`;
                    } else {
                        // Return to original position
                        const baseRotation = (index * 43) % 360;
                        leaf.style.transform = `rotate(${baseRotation}deg) scale(${0.8 + Math.random() * 0.2})`;
                    }
                });
            });
        </script>
    </body>
</html>